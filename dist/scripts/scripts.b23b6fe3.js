"use strict";angular.module("workshiftparserApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","ui.sortable","LocalStorageModule"]).config(["localStorageServiceProvider",function(a){a.setPrefix("ls")}]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main"}).when("/about",{templateUrl:"views/about.html",controller:"AboutCtrl",controllerAs:"about"}).otherwise({redirectTo:"/"})}]),angular.module("workshiftparserApp").controller("MainCtrl",["$scope","$log","CSVParserFactory",function(a,b,c){var d=new c;a.employees=[],a.parseFile=function(){try{setTimeout(function(){a.$apply(function(){})},10),d.parse(a.employees)}catch(c){b.debug("An error happened loading the file.")}},a.refreshEmployees=function(){a.employees=d.getEmployees()}}]),angular.module("workshiftparserApp").controller("AboutCtrl",[function(){}]),angular.module("workshiftparserApp").factory("CSVParserFactory",["Employee","Workshift",function(a,b){function c(){}var d=[];return c.prototype.parse=function(c){d=c;var e=document.getElementById("file").files[0],f=new FileReader;f.onloadend=function(c){for(var e,f,g=c.target.result,h=g.split("\n"),i=0;i<h.length;i++)if(f=h[i],e=f.split(","),5===e.length&&"Person Name"!==e[0]){for(var j=new b(e[2],e[3],e[4]),k=!1,l=0;l<d.length;l++)d[l].employeeNumber===e[1]&&(k=!0,d[l].addWorkshift(j));if(!k){var m=new a(e[1],e[0]);m.addWorkshift(j),d.push(m)}}},f.readAsBinaryString(e)},c.prototype.getEmployees=function(){return d},c}]),angular.module("workshiftparserApp").factory("Employee",["$log",function(a){function b(a,b){this.employeeNumber=a,this.name=b,this.hourlyWage=375,this.eveningCompensation=115,this.workshifts=[],this.dailyMinutes=[]}return b.prototype.addWorkshift=function(a){for(var b=!1,c=0;c<this.workshifts.length;c++)this.workshifts[c].startingTime.getTime()===a.startingTime.getTime()&&this.workshifts[c].endingTime.getTime()===a.endingTime.getTime()&&(b=!0);if(!b){this.workshifts.push(a);for(var d=!1,e=0;e<this.dailyMinutes.length;e++)this.dailyMinutes[e].date===a.date&&(this.dailyMinutes[e].minutes=this.dailyMinutes[e].minutes+a.getMinutes(),d=!0);d||this.dailyMinutes.push({date:a.date,minutes:a.getMinutes()})}},b.prototype.getMonthlyWage=function(){for(var a=0,b=0;b<this.dailyMinutes.length;b++)a+=this.countWageOfDay(this.dailyMinutes[b].minutes);for(var c=0;c<this.workshifts.length;c++)a+=this.workshifts[c].getEveningMinutes()*this.eveningCompensation/60;return Math.round(a)/100},b.prototype.countWageOfDay=function(a){var b=0;return a>480?(b+=8*this.hourlyWage,a>600?(b+=2*this.hourlyWage*1.25,a>720?(b+=2*this.hourlyWage*1.5,b+=(a-720)/60*this.hourlyWage*2):b+=(a-600)/60*this.hourlyWage*1.5):b+=(a-480)/60*this.hourlyWage*1.25):b+=a/60*this.hourlyWage,b},b.prototype.getWorkshifts=function(){return this.workshifts},b.prototype.printWorkshifts=function(){for(var b=0;b<this.workshifts.length;b++)a.debug(this.employeeNumber+", "+this.workshifts[b].date+" "+this.workshifts[b].startingTime+" - "+this.workshifts[b].endingTime+" "+this.workshifts[b].getMinutes()+" "+this.workshifts[b].getEveningMinutes())},b.prototype.printDailyMinutes=function(){for(var b=0;b<this.dailyMinutes.length;b++)a.debug(this.dailyMinutes[b].date+": "+this.dailyMinutes[b].minutes)},b}]),angular.module("workshiftparserApp").factory("Workshift",[function(){function a(a,c,d){this.date=a,this.startingTime=b(a,c),this.endingTime=b(a,d),this.endingTime<this.startingTime&&this.endingTime.setDate(this.endingTime.getDate()+1)}function b(a,b){var c=a.split("."),d=b.split(":"),e=new Date(c[2],c[1],c[0],d[0],d[1],0,0);return e}return a.prototype.getMinutes=function(){return(this.endingTime-this.startingTime)/1e3/60},a.prototype.getEveningMinutes=function(){var a=0,c=b(this.date,"18:00"),d=b(this.date,"06:00");d.setDate(d.getDate()+1),this.endingTime>c&&(this.startingTime>c&&(c=this.startingTime),this.endingTime<d&&(d=this.endingTime),a+=(d-c)/1e3/60);var e=b(this.date,"00:00"),f=b(this.date,"06:00");return this.startingTime<f&&(e=this.startingTime,this.endingTime<f&&(f=this.endingTime),a+=(f-e)/1e3/60),a},a}]),angular.module("workshiftparserApp").run(["$templateCache",function(a){a.put("views/about.html",'<div class="container"> <h2>About page</h2> <p>The basis for this single page application (SPA) was generated by Yeoman Angular generator. I left the "About"-section here to demonstrate how new views can be attached.</p> <p>Here\'s a basket of puppies for your troubles: </p> <img src="images/basket_of_puppies.edb184da.jpg" class="img-responsive" alt="Basket of puppies"> </div>'),a.put("views/main.html",'<div class="container"> <!-- File input --> <h2>Enter CSV-file for parsing:</h2> <input type="file" id="file" name="file"> <button ng-click="parseFile()"> Parse file </button> <button ng-click="refreshEmployees()"> <span class="glyphicon glyphicon-refresh"></span> </button> <h3>List of employees</h3> <table class="table"> <thead> <tr> <th>Person ID</th> <th>Person name</th> <th>Monthly wage</th> </tr> </thead> <tbody> <tr ng-repeat="employee in employees | orderBy:\'employeeNumber\'"> <td>{{ employee.employeeNumber }}</td> <td>{{ employee.name }}</td> <td>{{ employee.getMonthlyWage() | currency : "$" : 2 }}</td> </tr> </tbody> </table> <br> </div>')}]);